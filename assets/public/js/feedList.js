(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var o=0;o<n.length;o++){var a=n[o];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(void 0,r=function(e,n){if("object"!==t(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var a=o.call(e,n);if("object"!==t(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(a.key,"string"),"symbol"===t(r)?r:String(r)),a)}var r}new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.checkboxes=document.querySelectorAll("#posts-filter input[type='checkbox'].prisjakt-switch"),this.setupActions()}var n,o;return n=t,(o=[{key:"setupFormData",value:function(t){var e=prisjakt_ajax_object,n=e.ajax_action,o=e.ajax_nonce;this.ajaxFormData=new FormData,this.ajaxFormData.append("action",n),this.ajaxFormData.append("security",o),this.ajaxFormData.append("post_id",t)}},{key:"setupActions",value:function(){var t=this;this.checkboxes.forEach((function(e){e.addEventListener("click",(function(e){return t.updateCheckbox(e)}))}))}},{key:"updateCheckbox",value:function(t){var e=t.target,n=prisjakt_ajax_object.ajax_url,o=e.checked,a=e.getAttribute("data-post-id");this.setupFormData(a),this.ajaxFormData.append("is_active",o),function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){};fetch(t,{method:"POST",body:e}).then((function(t){return t.text()})).then((function(t){return n(t)})).catch((function(t){return n(t)}))}(n,this.ajaxFormData,(function(t){}))}}])&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}())})();